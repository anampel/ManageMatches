openapi: 3.0.0
info:
  version: 1.0.0
  title: MATCH API
  license:
    name: MIT
servers:
  - url: http://localhost:8080/api/match
paths:
  /findMatch:
    get:
      summary: Details about a match
      operationId: listMatch
      tags:
        - match
      parameters:
        - name: id
          in: query
          description: ID of the match
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Details about a match
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /addNewMatch:
    post:
      summary: Add a new match
      operationId: listMatch1
      tags:
        - match
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
        required: true
      responses:
        '200':
          description: \"Success\" if success
        
  /editMatch:
    put:
      summary: Edit an existing match
      operationId: listMatch2
      tags:
        - match
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
        required: true
      responses:
        '200':
          description: \"Success\" if success
  /deleteMatch:
    delete:
      summary: Delete an existing match
      operationId: listMatch3
      tags:
        - match
      parameters:
        - name: id
          in: query
          description: ID of the match
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: \"Success\" if success
  /findMatchByMatchOdds:
    get:
      summary: Details about a match according to a given odd
      operationId: listMatch4
      tags:
        - match odds
      parameters:
        - name: odd
          in: query
          description: odd of the match
          required: true
          schema:
            type: number
            format: int32
      responses:
        '200':
          description: Details about a match
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchOdds'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Match:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        team_a:
          type: string
        team_b:
          type: string
        match_date:
          type: string
        match_time:
          type: string
        sport:
          type: string
              
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
          
    MatchOdds:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        specifier:
          type: string
        odd:
          type: number
        match_id:
          type: object   
    
  securitySchemes:
    BasicAuth:
      type: http
      scheme: public
security:
  - BasicAuth: []
